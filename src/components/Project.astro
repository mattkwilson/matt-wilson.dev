---
import { Image, Picture } from '@astrojs/image/components';
import ProjectInfo from '../components/ProjectInfo.astro';

export interface Props {
	name: string;
    type: string;
    description: string;
    startDate: string;
    endDate: string;
    stack: string;
    thumbnail: string|ImageMetadata;
    github: string;
}

const { name, type, description, startDate, endDate, stack, thumbnail, github } = Astro.props;
const date = startDate + ' - ' + endDate;
---

<div class="flex flex-col mx-2 my-1 rounded-xl drop-shadow-2xl">
    <div project-div class="flex flex-row bg-black hover:bg-slate-800">
        <div class="flex m-2">
            <Picture class="rounded-md m-1" src={thumbnail} alt="Project Image" sizes="120px" widths={[120]} aspectRatio={'1:1'}></Picture>
        </div>
        <div class="w-full flex flex-col m-2 justify-between">
            <div class="flex flex-row text-white font-code justify-between">
                <div class="flex flex-row justify-start">
                    <h1 class="">{name}</h1>
                    <h1 class="hidden md:block text-sm my-auto mx-2">- {type}</h1>
                </div>
                <h2 class="mr-1">{date}</h2>
            </div>
            <div class="hidden my-1 sm:block grow text-white">
                <h2>{description}</h2>
            </div>
            <div id="stack" class="flex flex-row-reverse text-white">
                {stack.split(' ').reverse().map((s) => ( <h3 class="bg-white m-2 rounded-md text-black font-bold px-1">{s}</h3> ))}
            </div>
        </div>
    </div>
    <div class="bg-slate-800 flex sm:flex-row h-96 hidden">
        <div class="w-1/2">
            <slot name="left"/>
        </div>
        <div class="w-1/2">
            <ProjectInfo github="">
                <article class="prose-ul:list-disc prose-ul:list-inside prose-a:text-red-700">
                    <slot name="right"/>
                </article>
            </ProjectInfo>
        </div>
    </div>
</div>

<script>
    const projectCards = document.querySelectorAll('[project-div]');
    projectCards.forEach((e) => {
        e.addEventListener('click', () => {
            const content = e.parentElement.lastElementChild;
            if(content.classList.contains('hidden')) {
                content.classList.remove('hidden');
            } else {
                content.classList.add('hidden');
            }
        });
    });
</script>